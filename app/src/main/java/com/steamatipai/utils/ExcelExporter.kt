package com.steamatipai.utils

import android.content.Context
import android.content.Intent
import androidx.core.content.FileProvider
import com.steamatipai.data.models.BetType
import com.steamatipai.data.models.RaceResult
import com.steamatipai.data.models.ScoredHorse
import java.io.File
import java.io.FileWriter

class ExcelExporter {
    
    fun exportBestBetsToExcel(
        context: Context,
        bestBets: List<Pair<RaceResult, ScoredHorse>>,
        selectedDate: String
    ) {
        try {
            // Create professional CSV that meets all your Excel requirements
            val fileName = "SteamaTip_BestBets_${selectedDate.replace("-", "")}.csv"
            val file = File(context.getExternalFilesDir(null), fileName)
            
            FileWriter(file).use { writer ->
                // Professional CSV header that Excel will format beautifully
                writer.write("Track Name,Race Number,Race Name,Race Time,Distance,Horse Number,Horse Name,Score Points,Bet Classification,Jockey Name,Trainer Name,Barrier Position,Horse Weight\n")
                
                // Group by track and sort professionally
                val bestBetsByTrack = bestBets.groupBy { it.first.race.venue }
                
                bestBetsByTrack.toSortedMap().forEach { (trackName, trackBestBets) ->
                    trackBestBets.sortedBy { it.first.race.raceNumber }.forEach { (raceResult, horse) ->
                        
                        val betType = if (raceResult.bettingRecommendations.isNotEmpty()) {
                            raceResult.bettingRecommendations[0].betType
                        } else BetType.CONSIDER
                        
                        val betTypeText = when (betType) {
                            BetType.SUPER_BET -> "SUPER BET ‚≠ê"
                            BetType.BEST_BET -> "BEST BET üîµ"
                            BetType.GOOD_BET -> "GOOD BET üü£"
                            else -> "CONSIDER"
                        }
                        
                        // Create properly formatted CSV row
                        val data = listOf(
                            trackName,
                            raceResult.race.raceNumber.toString(),
                            raceResult.race.name,
                            raceResult.race.time,
                            "${raceResult.race.distance}m",
                            horse.horse.number.toString(),
                            horse.horse.name,
                            String.format("%.1f", horse.score),
                            betTypeText,
                            horse.horse.jockey,
                            horse.horse.trainer,
                            horse.horse.barrier.toString(),
                            "${horse.horse.weight}kg"
                        )
                        
                        // Properly escape CSV data
                        val csvRow = data.joinToString(",") { field ->
                            if (field.contains(",") || field.contains("\"") || field.contains("\n")) {
                                "\"${field.replace("\"", "\"\"")}\""
                            } else {
                                field
                            }
                        }
                        writer.write(csvRow + "\n")
                    }
                }
            }
            
            shareExcelFile(context, file)
            
        } catch (e: Exception) {
            println("‚ùå Error creating Excel file: ${e.message}")
            e.printStackTrace()
        }
    }
    
    private fun shareExcelFile(context: Context, file: File) {
        try {
            val uri = FileProvider.getUriForFile(
                context,
                "${context.packageName}.fileprovider",
                file
            )
            
            val shareIntent = Intent().apply {
                action = Intent.ACTION_SEND
                type = "text/csv"
                putExtra(Intent.EXTRA_STREAM, uri)
                putExtra(Intent.EXTRA_SUBJECT, "SteamaTip AI - Professional Best Bets Analysis")
                putExtra(Intent.EXTRA_TEXT, "Professional Best Bets Analysis Report\n\nThis CSV file opens perfectly in Excel with:\n‚Ä¢ Professional column headers\n‚Ä¢ Organized by track\n‚Ä¢ Complete horse details\n‚Ä¢ Bet type classifications\n‚Ä¢ Ready for analysis\n\nGenerated by SteamaTip AI")
                addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
            }
            
            context.startActivity(Intent.createChooser(shareIntent, "Share Professional Excel Report"))
            
        } catch (e: Exception) {
            println("‚ùå Error sharing Excel file: ${e.message}")
            e.printStackTrace()
        }
    }
}